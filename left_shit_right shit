

for left shift 
a=10;
b=a<<1; one bit left shift

how it perform---

10 into binary = 1010
after left shift b= 10100  added one bit at lsb(left significant bit)
b into decimal=20

if we want to shift two bits then

b=a<<2
 a into binary=1010
 2 bit left shit b=101000
 b into decimal =40


 For Right shit value added at starting and remove one value from left or end


 a=10
 b=a>>1;

 a=1010
 right shift
 b=0101 (one value removed form last) 
 and it will become (0101)=>5


 1's Complement 
  
  (~) it is used for 1's complement
  
  format ~n=-(n+1)

  int a=45,b;
  b=~a;
  b=-46//answer


  UNSIGNED RIGHT SHIFT

it put the zero at the starting point and the number will become positive 
its also known as "zero filling right shift"
 
 int a=-2;

 int is a 4byte value that mean it is equalent to 32 bits
 and its binary is written as
 1(29-zero)10

  where 
  1 at starting point is represented (-)
  10=2(in integer)
  we integer is 32 bit thats why 29 zeros are filling the remaining space 


 byte a=-2;
  b=a>>>5;

  byte represent 8 bit 

  2 = 00000010 (in 8 bit binary)
  convert into 1's complenent = 11111101
  convert 1's to 2's complement=11111110 //2's is used for represent negative number


  here we doing 5 bit right shift that mean add 5 zeros at starting 
  and remove from last until it will not become in 8 bit

  -2(a)>>>5=00000111
  b=00000100 in integer 4
  



